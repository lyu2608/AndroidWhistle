plugins {
    id 'java'
    id 'io.qameta.allure' version "2.8.1"
}

group 'com.company'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


dependencies {
    testCompile group: 'org.testng', name: 'testng', version: '6.14.3'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '3.141.59'
    compile group: 'com.relevantcodes', name: 'extentreports', version: '2.41.2'
    compile group: 'io.appium', name: 'java-client', version: '7.0.0'
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile group: 'com.browserstack', name: 'browserstack-local-java', version: '1.0.2'
    compile group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.1'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.5'
    compile group: 'com.automation-remarks', name: 'video-recorder-junit', version: '1.+'
}

task androidApp(type: Test) {
    systemProperty "driver", "androidApp"
//    systemProperty 'env', System.getProperty('env', 'all')
    useTestNG() {
        scanForTestClasses = false
        suites 'src/test/resources/android.xml'
        ignoreFailures = true
    }
    testLogging {
        events "PASSED", "STARTED", "FAILED", "SKIPPED"
    }
}


allure {
    version = '2.13.1'
    autoconfigure = true
    String allureJavaVersion = '2.0-BETA9'
    aspectjweaver = true
    boolean clean = true
//    resultsDir = file('/allure-results')
//        reportDir = file('/allure-report')
}


//task allureAggregatedReport(type: AllureReport) {
////    resultsDirs = subprojects.allure.resultsDir
//    resultsDirs = subprojects.allure.resultsDir
//}
//
//task openAllureReport(type: Exec) {
////    commandLine "allure report open -o build/reports/allure"
//
////    commandLine "./gradlew clean build allure"
////    commandLine "allure", "generate build/allure-results"
//    commandLine "./gradlew index"
//}
